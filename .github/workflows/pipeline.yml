name: BP CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  Build_Test_and_Publish:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.8.2

      - name: Restore Dependencies
        run: dotnet restore
        
      - name: Build Project - net5.0
        run: dotnet build --configuration Release --no-restore
        
      - name: Run Unit Tests - xUnit
        run: dotnet test BPCalculator.UnitTests/BPCalculator.UnitTests.csproj -c Release --no-build --verbosity normal -l:trx /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:Exclude="[BPCalculator.Views]*"
        
      - name: Run Acceptance Tests - BDD SpecFlow
        run: dotnet test BPCalculator.AcceptanceTests/BPCalculator.AcceptanceTests.csproj -c Release --no-build --verbosity normal -l:trx

      - name: Generate Tests Report
        uses: dorny/test-reporter@v1.5.0
        with:
          name: Tests Report
          path: '**.trx'
          reporter: 'dotnet-trx'

      - name: Generate Code Coverage Report - Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          name: BloodPressureCalculator
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Publish Application
        run: dotnet publish -c Release --no-build -o './BP'

      - name: Azure Login
        uses: Azure/login@v1.4.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Deploy to Azure 
        uses: azure/webapps-deploy@v2
        with:
          app-name: BP-X00192332
          package: './BP'

  Static_Analysis_And_Dependency_Checker:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run Code Static Analysis - SonarCloud
        uses: SonarSource/sonarcloud-github-action@v1.6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=dan-lopes
            -Dsonar.projectKey=dan-lopes_csd-ca1

      - name: Run Dependency Checker
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'BP'
          path: '.'
          format: 'HTML'
          args: >
            --failOnCVSS 7

      - name: Upload Dependency Check Results
        uses: actions/upload-artifact@master
        with:
          name: Dependency Checker Report
          path: ${{github.workspace}}/reports

      - name: Pull Docker image for OWASP ZAP
        run: docker pull owasp/zap2docker-weekly

      - name: Run Security Scan - OWASP ZAP
        run: docker run -v /report:/zap/wrk/:rw --user root -t owasp/zap2docker-weekly zap-baseline.py -t ${{env.URI}} -I -r zapreport.html

      - uses: actions/upload-artifact@v2
        name: Upload OWASP ZAP Report
        with:
          name: ZAP Report
          path: /report/zapreport.html